- procs
  - hoj (2%, probably can't proc off itself with 1.12 mechanics, https://forum.elysium-project.org/topic/43830-hand-of-justice-no-longer-has-an-internal-cooldown-on-procs/)
  - evtl. thrash blade (does it duplicate the attack it procced from or trigger a white attack?)
    1.2 ppm = 5% proc chance, https://forum.elysium-project.org/topic/43586-thrash-blade-or-krol-blade/
  - crusader (1 ppm, same hand reproc refreshes, other hand proc stacks), https://rogerkarlsson.com/blogs/wow/crusader/
- on use
- bloodrage on cd vs. when no rage available for ability
- evtl. deep wounds
  - https://www.wowhead.com/forums&topic=144974
  - gets overwritten pretty soon: https://forum.nostalrius.org/viewtopic.php?f=36&t=19499
- execute weapon set


- improve log entries, aim for complete transparency:
  - flurry uptime
  - bt / ww: how many of the theoretically possible ones are done during a fight due to rage?


- difference 2x fast vs. slow / fast vs. slow / slow @ execute phase
- optimize hs threshold when fight duration is random


x model buffs (own, other classes, consumables)
model procs (items, talents, enchants)
talents: deep wounds
model on-use effects (items, consumables (mighty rage potion, juju flurry))
x model boss buffs / debuffs
x event queue
x ability comes off cd = event, end of gcd = event
x model rage, on_rage_gained callback
x model ability priorities
x run sim n times (use confidence interval to define n) on boss x, output dps, dps per ability, stat weights
are floats an issue? if yes, how to get around floating point arithmetics?
do i need to use epsilon anywhere else?
rounding: when to round / floor / ceil?
refactor debuffs (like buffs)
model debuffs only on boss after some time, cd stacking, ...
outsource ability cost etc. config. all knowledge if possible. support multiple expansions if possible.
x fight duration: draw randomly around configured duration (from normal distribution? fixed min / max?)
save / load item sets

performance improvements (expecting a 2x speedup from optimizations times a 4x speedup on 4 logical cores):
- cache all calculations with fixed result
- current_stats: reduce calls to a minimum / calculate only in handle_event (?)
- reduce copy to a minimum
- make sure logging doesn't use any cpu time when disabled
- parallelize do_n_runs

abilities to model:
prio 1:
x bt
x ww
x bloodrage
x death wish
x recklessness
x hs

prio 2:
x execute
x op (less crit @ battle)

prio 3:
battle shout

tests / lookups:
death wish gcd? reck gcd?
bt, ww cds
check calculated stats = stats in char window
5% base crit double-check
white hit weapon damage actually randomly drawn in dmg range or just the average?
what about ww?
